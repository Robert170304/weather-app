[{"C:\\Users\\HP\\weather-app\\src\\index.js":"1","C:\\Users\\HP\\weather-app\\src\\App.js":"2","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx":"3","C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js":"4","C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx":"5","C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx":"6","C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx":"7","C:\\Users\\HP\\weather-app\\src\\components\\More.jsx":"8","C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx":"9","C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx":"10","C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx":"11"},{"size":265,"mtime":1656426743449,"results":"12","hashOfConfig":"13"},{"size":6119,"mtime":1656499986798,"results":"14","hashOfConfig":"13"},{"size":677,"mtime":1656489602921,"results":"15","hashOfConfig":"13"},{"size":2241,"mtime":1656426743459,"results":"16","hashOfConfig":"13"},{"size":964,"mtime":1656426743400,"results":"17","hashOfConfig":"13"},{"size":1986,"mtime":1656495166530,"results":"18","hashOfConfig":"13"},{"size":891,"mtime":1656426743445,"results":"19","hashOfConfig":"13"},{"size":2106,"mtime":1656170297484,"results":"20","hashOfConfig":"13"},{"size":2861,"mtime":1656484418997,"results":"21","hashOfConfig":"13"},{"size":2014,"mtime":1656507641408,"results":"22","hashOfConfig":"13"},{"size":3087,"mtime":1656514736384,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"q9xb9r",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"C:\\Users\\HP\\weather-app\\src\\index.js",[],[],[],"C:\\Users\\HP\\weather-app\\src\\App.js",["61","62","63","64","65"],[],"import './App.css';\r\nimport React from 'react';\r\nimport TopBtns from './components/TopBtns';\r\nimport Inputs from './components/Inputs';\r\nimport TimeaAndLocation from './components/TimeaAndLocation';\r\nimport TempDetails from './components/TempDetails';\r\nimport Forecast from './components/Forecast';\r\nimport getFormattedData from './services/WeatherServices';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { ReactNotifications, Store } from 'react-notifications-component'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport Modal from './components/Modal';\r\nimport { UilAngleDown } from '@iconscout/react-unicons'\r\nimport DropDownContent from './components/DropDownContent';\r\nimport {motion, AnimatePresence} from 'framer-motion'\r\n\r\n\r\nfunction App() {\r\n\r\n  const [location, setLocation] = React.useState(\"\")\r\n  // const currentUserCity = localStorage.getItem(\"usercity\");\r\n  const userLocationCoords = localStorage.getItem(\"userCoords\");\r\n  const [query, setQuery] = React.useState({q:'berlin' })\r\n  const [units, setUnit] = React.useState('metric')\r\n  const [weather, setWeather] = React.useState(null)\r\n  const [showMore, setShowMore] = React.useState(false)\r\n  const [showDropDown, setShowDropDown] = React.useState(false)\r\n  const [isPending, startTransition] = React.useTransition()\r\n  const modalRef = React.useRef()\r\n  const [userQuery, setUserQuery] = React.useState(JSON.parse(userLocationCoords))\r\n  const [displayCurrentLocation, setDisplayCurrentLocation] = React.useState(null)\r\n\r\n  React.useEffect(() => {\r\n    (async function() {\r\n      const msg = 'current location'\r\n      toast.info('Fetching weather for ' + msg)\r\n      await getFormattedData({...userQuery, units}).then((data) => {\r\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}`)\r\n        setDisplayCurrentLocation(data)\r\n      })\r\n    })()\r\n  },[userQuery])\r\n    \r\n\r\n  React.useEffect(() => {\r\n    (async function () {\r\n      const msg = query.q ? query.q : 'current location'\r\n      toast.info('Fetching weather for ' + msg)\r\n      await getFormattedData({...query, units}).then((data) => {\r\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}`)\r\n        setWeather(data)\r\n      })\r\n    })()\r\n  },[query, units]);\r\n\r\n  React.useEffect(() => {\r\n    if (showMore || showDropDown) {\r\n        document.body.style.overflow = \"hidden\";\r\n    } else {\r\n        document.body.style.overflow = \"auto\";\r\n    }\r\n  })\r\n\r\n  // React.useEffect(() => {\r\n  //   function getClickOutSide(e) {\r\n  //     if(showMore && e.target !== modalRef.current) {\r\n  //       setShowMore(false);\r\n  //     }\r\n  //   }\r\n  //   window.addEventListener('click', getClickOutSide);\r\n  //   return () => {\r\n  //     window.removeEventListener('click', getClickOutSide);\r\n  //   }\r\n  // }, [showMore])\r\n\r\n  function formatBg() {\r\n    const thresold = units === 'metric'? 20 : 60\r\n    if (!weather || weather.temp <= thresold) {\r\n      return 'from-cyan-700 to-blue-700'\r\n    }else{\r\n      return 'from-yellow-700 to-orange-700'\r\n    }\r\n  }\r\n\r\n  function handleCloseMore() {\r\n    if (showMore) {\r\n      setShowMore(false)\r\n    } else if (showDropDown) {\r\n      setShowDropDown(false)\r\n    }\r\n  }\r\n\r\n  // function settingUserLocation() {\r\n  //   if(location){\r\n  //     startTransition(() => {\r\n  //       handleCloseMore()\r\n  //     })\r\n  //     localStorage.setItem(\"usercity\", location);\r\n  //     localStorage.removeItem('userCoords');\r\n  //     setQuery({q: location})\r\n  //   }else if(location === \"\") {\r\n  //     alert('please provide your city name')\r\n  //   }\r\n  // }\r\n\r\n  function detectUserLocation() {\r\n    startTransition(() => {\r\n      handleCloseMore()\r\n    })\r\n    if (navigator.geolocation) {\r\n      toast.info('Fetching your location')\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let lat = position.coords.latitude\r\n        let lon = position.coords.longitude\r\n        let coords = {lat, lon}\r\n        localStorage.setItem(\"userCoords\",JSON.stringify(coords));\r\n        localStorage.removeItem('usercity');\r\n        setUserQuery(coords)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    {showMore && <Modal showMore={showMore} \r\n      ref={modalRef}\r\n      handleCloseMore={handleCloseMore} \r\n      // location={location}\r\n      // setLocation={setLocation}\r\n      // settingUserLocation={settingUserLocation} \r\n      isPending={isPending}\r\n      detectUserLocation={detectUserLocation}/>} \r\n    <AnimatePresence>\r\n      {showDropDown && \r\n      <motion.div key=\"content\"\r\n      initial=\"collapsed\"\r\n      animate=\"open\"\r\n      exit=\"collapsed\"\r\n      variants={{\r\n        open: { opacity: 1, height: 0 },\r\n        collapsed: { opacity: 0, height: \"-50%\" }\r\n      }}\r\n      transition={{type:\"spring\", stiffness:\"100\", duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}>\r\n        <DropDownContent \r\n        displayCurrentLocation={displayCurrentLocation}\r\n        handleCloseMore={handleCloseMore} />\r\n      </motion.div>}\r\n    </AnimatePresence>\r\n    <div className={`App mx-auto m-4 px-3 py-3 bg-gradient-to-br ${formatBg()} h-fit shadow-xl shadow-gray-400 md:py-5 md:px-32`}>\r\n      {displayCurrentLocation && <motion.button type='button' whileTap={{scale: 0.9}} className='text-white inline-flex' onClick={() => setShowDropDown(true)}>\r\n        <p>{`${displayCurrentLocation.name}, ${displayCurrentLocation.country}`}</p>\r\n        <UilAngleDown size={20}/>\r\n      </motion.button>}\r\n      <TopBtns setQuery={setQuery} showMore={showMore} setShowMore={setShowMore}/>\r\n      <Inputs setQuery={setQuery} units={units} setUnit={setUnit}/>\r\n      {weather && (\r\n        <>\r\n          <TimeaAndLocation weather={weather}/>\r\n          <TempDetails weather={weather}/>\r\n          <Forecast title=\"hourly forecast\" items={weather.hourly}/>\r\n          <Forecast title=\"daily forecast\" items={weather.daily}/>\r\n        </>\r\n      )}\r\n      {/* <ReactNotifications /> */}\r\n      <ToastContainer autoClose={5000} theme='colored' newestOnTop={true}/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\More.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx",[],[],[],"C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx",["66","67","68"],[],"import React from 'react'\r\nimport {UilCelsius, UilTimes, UilLocationArrow } from '@iconscout/react-unicons'\r\nimport { iconUrlFromCode } from '../services/WeatherServices'\r\nimport getFormattedData from '../services/WeatherServices';\r\n\r\n\r\nfunction DropDownContent(props) {\r\n\r\n    const [cityQueries, setCityQueries] = React.useState({q: ['london','sydney', 'tokyo', 'paris']})\r\n    const [units, setUnits] = React.useState('metric')\r\n\r\n  return (\r\n    <div className='bg-gradient-to-b from-blue-500 to-slate-50 text-white p-4 fixed top-0 left-0 right-0 bottom-0 z-50 w-full h-full'>\r\n        <header className='flex items-center justify-between'>\r\n            <UilTimes className=\"cursor-pointer transition ease-out hover:scale-125\" size={25} onClick={props.handleCloseMore} />\r\n            <h4 className='text-xl text-slate-900 font-semibold'>Locations</h4>\r\n            <UilCelsius size={15} />\r\n        </header>\r\n        <section className='flex justify-around items-center w-full my-3 p-4 border border-b-2 border-x-0 border-t-0'>\r\n            <div className='flex flex-col'>\r\n                <p className='flex gap-x-2 my-1 font-light'><UilLocationArrow className=\"fill-red-800\" /> CURRENT</p>\r\n                <h3 className='text-xl capitalize'>{props.displayCurrentLocation === 'No current location' ? props.displayCurrentLocation : `${props.displayCurrentLocation.name}, ${props.displayCurrentLocation.country}`}</h3>\r\n            </div>\r\n            <div>\r\n                <img src={iconUrlFromCode(props.displayCurrentLocation.icon)} className='w-10' alt=\"\" />\r\n                <p className='text-2xl'>{`${props.displayCurrentLocation.temp.toFixed()}`}°</p>\r\n            </div>\r\n        </section>\r\n        <div className='w-full my-2 flex justify-center items-center'>\r\n            <section className='text-black w-auto p-4 md:w-6/12'>\r\n                <ul className='flex flex-col'>\r\n                    <li className='flex flex-row justify-between items-center w-full p-2 border border-b-2 border-x-0 border-t-0'>\r\n                        <p>FAVORITES</p>\r\n                        <p>Edit</p>\r\n                    </li>\r\n                    {cityQueries.q.map((q, id) => {\r\n                        getFormattedData({q, units}).then((data) => {\r\n                            return <li key={id}>{data.name}</li>\r\n                            // return <li className='flex flex-row justify-between items-center text-xl w-full p-2 border border-b-2 border-x-0 border-t-0' key={id}>\r\n                            //     <p className='font-medium'>{data.name}</p>\r\n                            //     <div className='flex gap-x-2'>\r\n                            //         <img src={iconUrlFromCode(data.icon)} className='w-7' alt=\"\" />\r\n                            //         <p className='text-2xl'>{`${data.temp.toFixed()}`}°</p>\r\n                            //     </div>\r\n                            // </li>\r\n                        })\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDownContent",{"ruleId":"69","severity":1,"message":"70","line":10,"column":10,"nodeType":"71","messageId":"72","endLine":10,"endColumn":28},{"ruleId":"69","severity":1,"message":"73","line":10,"column":30,"nodeType":"71","messageId":"72","endLine":10,"endColumn":35},{"ruleId":"69","severity":1,"message":"74","line":21,"column":10,"nodeType":"71","messageId":"72","endLine":21,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":21,"column":20,"nodeType":"71","messageId":"72","endLine":21,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":43,"column":5,"nodeType":"78","endLine":43,"endColumn":16,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":9,"column":25,"nodeType":"71","messageId":"72","endLine":9,"endColumn":39},{"ruleId":"69","severity":1,"message":"81","line":10,"column":19,"nodeType":"71","messageId":"72","endLine":10,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":36,"column":48,"nodeType":"84","messageId":"85","endLine":36,"endColumn":50},"no-unused-vars","'ReactNotifications' is defined but never used.","Identifier","unusedVar","'Store' is defined but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'setCityQueries' is assigned a value but never used.","'setUnits' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"87","fix":"88"},"Update the dependencies array to be: [units, userQuery]",{"range":"89","text":"90"},[1936,1947],"[units, userQuery]"]