[{"C:\\Users\\HP\\weather-app\\src\\index.js":"1","C:\\Users\\HP\\weather-app\\src\\App.js":"2","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx":"3","C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js":"4","C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx":"5","C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx":"6","C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx":"7","C:\\Users\\HP\\weather-app\\src\\components\\More.jsx":"8","C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx":"9","C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx":"10","C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx":"11"},{"size":254,"mtime":1655797138072,"results":"12","hashOfConfig":"13"},{"size":5335,"mtime":1656396742417,"results":"14","hashOfConfig":"13"},{"size":677,"mtime":1655972073359,"results":"15","hashOfConfig":"13"},{"size":2241,"mtime":1656255242372,"results":"16","hashOfConfig":"13"},{"size":964,"mtime":1656330808054,"results":"17","hashOfConfig":"13"},{"size":1986,"mtime":1656306833964,"results":"18","hashOfConfig":"13"},{"size":891,"mtime":1656349988821,"results":"19","hashOfConfig":"13"},{"size":2106,"mtime":1656170297484,"results":"20","hashOfConfig":"13"},{"size":2899,"mtime":1656330727427,"results":"21","hashOfConfig":"13"},{"size":2193,"mtime":1656349848252,"results":"22","hashOfConfig":"13"},{"size":3921,"mtime":1656348637433,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"q9xb9r",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\HP\\weather-app\\src\\index.js",[],[],[],"C:\\Users\\HP\\weather-app\\src\\App.js",["60","61"],[],"import './App.css';\nimport React from 'react';\nimport TopBtns from './components/TopBtns';\nimport Inputs from './components/Inputs';\nimport TimeaAndLocation from './components/TimeaAndLocation';\nimport TempDetails from './components/TempDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedData from './services/WeatherServices';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ReactNotifications, Store } from 'react-notifications-component'\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-notifications-component/dist/theme.css'\nimport Modal from './components/Modal';\nimport { UilAngleDown } from '@iconscout/react-unicons'\nimport DropDownContent from './components/DropDownContent';\nimport {motion, AnimatePresence} from 'framer-motion'\n\n\nfunction App() {\n\n  const [location, setLocation] = React.useState(\"\")\n  const currentUserCity = localStorage.getItem(\"usercity\");\n  const userLocationCoords = localStorage.getItem(\"userCoords\");\n  const [query, setQuery] = React.useState(userLocationCoords ? JSON.parse(userLocationCoords) : {q: currentUserCity ? currentUserCity : 'berlin' })\n  const [units, setUnit] = React.useState('metric')\n  const [weather, setWeather] = React.useState(null)\n  const [showMore, setShowMore] = React.useState(false)\n  const [showDropDown, setShowDropDown] = React.useState(false)\n  const [isPending, startTransition] = React.useTransition()\n  const modalRef = React.useRef()\n\n  React.useEffect(() => {\n    (async function () {\n      const msg = query.q ? query.q : 'current location'\n      toast.info('Fetching weather for ' + msg)\n      await getFormattedData({...query, units}).then((data) => {\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}`)\n        setWeather(data)\n      })\n    })()\n  },[query, units]);\n\n  React.useEffect(() => {\n    if (showMore || showDropDown) {\n        document.body.style.overflow = \"hidden\";\n    } else {\n        document.body.style.overflow = \"auto\";\n    }\n  })\n\n  // React.useEffect(() => {\n  //   function getClickOutSide(e) {\n  //     if(showMore && e.target !== modalRef.current) {\n  //       setShowMore(false);\n  //     }\n  //   }\n  //   window.addEventListener('click', getClickOutSide);\n  //   return () => {\n  //     window.removeEventListener('click', getClickOutSide);\n  //   }\n  // }, [showMore])\n\n  function formatBg() {\n    const thresold = units === 'metric'? 20 : 60\n    if (!weather || weather.temp <= thresold) {\n      return 'from-cyan-700 to-blue-700'\n    }else{\n      return 'from-yellow-700 to-orange-700'\n    }\n  }\n\n  function handleCloseMore() {\n    if (showMore) {\n      setShowMore(false)\n    } else if (showDropDown) {\n      setShowDropDown(false)\n    }\n  }\n\n  function settingUserLocation() {\n    if(location){\n      startTransition(() => {\n        handleCloseMore()\n      })\n      localStorage.setItem(\"usercity\", location);\n      localStorage.removeItem('userCoords');\n      setQuery({q: location})\n    }else if(location === \"\") {\n      alert('please provide your city name')\n    }\n  }\n\n  function detectUserLocation() {\n    startTransition(() => {\n      handleCloseMore()\n    })\n    if (navigator.geolocation) {\n      toast.info('Fetching your location')\n      navigator.geolocation.getCurrentPosition((position) => {\n        let lat = position.coords.latitude\n        let lon = position.coords.longitude\n        let coords = {lat, lon}\n        localStorage.setItem(\"userCoords\",JSON.stringify(coords));\n        localStorage.removeItem('usercity');\n        setQuery(coords)\n      })\n    }\n  }\n\n  return (<>\n    {showMore && <Modal showMore={showMore} \n      ref={modalRef}\n      handleCloseMore={handleCloseMore} \n      location={location}\n      setLocation={setLocation}\n      settingUserLocation={settingUserLocation} \n      isPending={isPending}\n      detectUserLocation={detectUserLocation}/>} \n    <AnimatePresence>\n      {showDropDown && \n      <motion.div key=\"content\"\n      initial=\"collapsed\"\n      animate=\"open\"\n      exit=\"collapsed\"\n      variants={{\n        open: { opacity: 1, height: 0 },\n        collapsed: { opacity: 0, height: \"-50%\" }\n      }}\n      transition={{type:\"spring\", stiffness:\"100\", duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}>\n        <DropDownContent \n          handleCloseMore={handleCloseMore} \n          weather={weather}/>\n      </motion.div>}\n    </AnimatePresence>\n    <div className={`App mx-auto m-4 px-3 py-3 bg-gradient-to-br ${formatBg()} h-fit shadow-xl shadow-gray-400 md:py-5 md:px-32`}>\n      <motion.button type='button' whileTap={{scale: 0.9}} className='text-white inline-flex' onClick={() => setShowDropDown(true)}>\n        <p>Petlad, IN</p>\n        <UilAngleDown size={20}/>\n      </motion.button>\n      <TopBtns setQuery={setQuery} showMore={showMore} setShowMore={setShowMore}/>\n      <Inputs setQuery={setQuery} units={units} setUnit={setUnit}/>\n      {weather && (\n        <>\n          <TimeaAndLocation weather={weather}/>\n          <TempDetails weather={weather}/>\n          <Forecast title=\"hourly forecast\" items={weather.hourly}/>\n          <Forecast title=\"daily forecast\" items={weather.daily}/>\n        </>\n      )}\n      {/* <ReactNotifications /> */}\n      <ToastContainer autoClose={5000} theme='colored' newestOnTop={true}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\More.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx",["62","63"],[],"import React from 'react'\r\nimport {UilArrowUp, \r\n    UilArrowDown, \r\n    UilTemperature, \r\n    UilTear, \r\n    UilWind, \r\n    UilSun, \r\n    UilSunset} from '@iconscout/react-unicons'\r\nimport { formatToLocalTime, iconUrlFromCode } from '../services/WeatherServices'\r\n\r\nfunction TempDetails(props) {\r\n  return (\r\n    <div>\r\n        <div className='flex items-center justify-center py-6 text-xl text-cyan-300'>\r\n            <p>{props.weather.details}</p>\r\n        </div>\r\n        <div className='flex flex-row flex-wrap items-center justify-between text-white py-3'>\r\n            <img src={iconUrlFromCode(props.weather.icon)} className='w-20 m-1.5' alt=\"\" />\r\n            <p className='text-5xl m-1.5'>{`${props.weather.temp.toFixed()}`}°</p>\r\n            <div className='flex flex-col space-y-2 m-1.5'>\r\n                <div className='flex font-light text-5m items-center justify-center'>\r\n                    <UilTemperature size={18} className='mr-1'/>\r\n                    Real fell:\r\n                    <span className='font-medium ml-1'>{`${props.weather.feels_like.toFixed()}°`}</span>\r\n                </div>\r\n                <div className='flex font-light text-5m items-center justify-center'>\r\n                    <UilTear size={18} className='mr-1'/>\r\n                    Humidity:\r\n                    <span className='font-medium ml-1'>{`${props.weather.humidity.toFixed()}%`}</span>\r\n                </div>\r\n                <div className='flex font-light text-5m items-center justify-center'>\r\n                    <UilWind size={18} className='mr-1'/>\r\n                    Wind:\r\n                    <span className='font-medium ml-1'>{`${props.weather.speed.toFixed()} km/h`}</span>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        <div className='flex flex-row flex-wrap items-center justify-center space-x-2 text-white text-sm py-3'>\r\n            <UilSun/>\r\n            <p className='font-light'>\r\n                Rise: <span className='font-medium ml-1'>{formatToLocalTime(props.weather.sunrise, props.weather.timezone, \"hh:mm a\")}</span>\r\n            </p>\r\n            <p className='font-light'>|</p>\r\n            <UilSunset/>\r\n            <p className='font-light'>\r\n                Set: <span className='font-medium ml-1'>{formatToLocalTime(props.weather.sunset, props.weather.timezone, \"hh:mm a\")}</span>\r\n            </p>\r\n            <p className='font-light'>|</p>\r\n            <UilSun/>\r\n            <p className='font-light'>\r\n                High: <span className='font-medium ml-1'>{`${props.weather.temp_max.toFixed()}°`}</span>\r\n            </p>\r\n            <p className='font-light'>|</p>\r\n            <UilSun/>\r\n            <p className='font-light'>\r\n                Low: <span className='font-medium ml-1'>{`${props.weather.temp_min.toFixed()}°`}</span>\r\n            </p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TempDetails","C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx",[],[],{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":28},{"ruleId":"64","severity":1,"message":"68","line":10,"column":30,"nodeType":"66","messageId":"67","endLine":10,"endColumn":35},{"ruleId":"64","severity":1,"message":"69","line":2,"column":9,"nodeType":"66","messageId":"67","endLine":2,"endColumn":19},{"ruleId":"64","severity":1,"message":"70","line":3,"column":5,"nodeType":"66","messageId":"67","endLine":3,"endColumn":17},"no-unused-vars","'ReactNotifications' is defined but never used.","Identifier","unusedVar","'Store' is defined but never used.","'UilArrowUp' is defined but never used.","'UilArrowDown' is defined but never used."]