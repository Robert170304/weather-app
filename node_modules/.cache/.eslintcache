[{"C:\\Users\\HP\\weather-app\\src\\index.js":"1","C:\\Users\\HP\\weather-app\\src\\App.js":"2","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx":"3","C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js":"4","C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx":"5","C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx":"6","C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx":"7","C:\\Users\\HP\\weather-app\\src\\components\\More.jsx":"8","C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx":"9","C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx":"10","C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx":"11"},{"size":220,"mtime":1656679342619,"results":"12","hashOfConfig":"13"},{"size":4956,"mtime":1656679341371,"results":"14","hashOfConfig":"13"},{"size":677,"mtime":1656679342249,"results":"15","hashOfConfig":"13"},{"size":2262,"mtime":1656679343180,"results":"16","hashOfConfig":"13"},{"size":975,"mtime":1656679341515,"results":"17","hashOfConfig":"13"},{"size":1943,"mtime":1656679341540,"results":"18","hashOfConfig":"13"},{"size":891,"mtime":1656679342251,"results":"19","hashOfConfig":"13"},{"size":2106,"mtime":1656170297484,"results":"20","hashOfConfig":"13"},{"size":2861,"mtime":1656679342248,"results":"21","hashOfConfig":"13"},{"size":1329,"mtime":1656679342143,"results":"22","hashOfConfig":"13"},{"size":3487,"mtime":1656679341439,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q9xb9r",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\weather-app\\src\\index.js",[],[],"C:\\Users\\HP\\weather-app\\src\\App.js",["58"],[],"import './App.css';\r\nimport React from 'react';\r\nimport TopBtns from './components/TopBtns';\r\nimport Inputs from './components/Inputs';\r\nimport TimeaAndLocation from './components/TimeaAndLocation';\r\nimport TempDetails from './components/TempDetails';\r\nimport Forecast from './components/Forecast';\r\nimport getFormattedData from './services/WeatherServices';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport Modal from './components/Modal';\r\nimport { UilAngleDown } from '@iconscout/react-unicons'\r\nimport DropDownContent from './components/DropDownContent';\r\nimport {motion, AnimatePresence} from 'framer-motion'\r\n\r\n\r\nfunction App() {\r\n\r\n  const userLocationCoords = localStorage.getItem(\"userCoords\");\r\n  const [query, setQuery] = React.useState({q:'berlin' })\r\n  const [units, setUnit] = React.useState('metric')\r\n  const [weather, setWeather] = React.useState(null)\r\n  const [showMore, setShowMore] = React.useState(false)\r\n  const [showDropDown, setShowDropDown] = React.useState(false)\r\n  const [isPending, startTransition] = React.useTransition()\r\n  const [userQuery, setUserQuery] = React.useState(JSON.parse(userLocationCoords))\r\n  const [displayCurrentLocation, setDisplayCurrentLocation] = React.useState(null)\r\n\r\n  React.useEffect(() => {\r\n    (async function() {\r\n      await getFormattedData({...userQuery, units}).then((data) => {\r\n        setDisplayCurrentLocation(data)\r\n      })\r\n    })()\r\n  },[userQuery])\r\n\r\n  function displayToast(string, msg) {\r\n    const infoToast = toast.info(string + msg)\r\n    return infoToast\r\n  }\r\n    \r\n  React.useEffect(() => {\r\n    (async function () {\r\n      const msg = query.q \r\n      displayToast('Fetching weather for ', msg)\r\n      await getFormattedData({...query, units}).then((data) => {\r\n        toast.success(`Successfully fetched weather for ${data.name}, ${data.country}`)\r\n        console.log(toast)\r\n        setWeather(data)\r\n      })\r\n    })()\r\n  },[query, units]);\r\n\r\n  React.useEffect(() => {\r\n    if (showMore || showDropDown) {\r\n        document.body.style.overflow = \"hidden\";\r\n    } else {\r\n        document.body.style.overflow = \"auto\";\r\n    }\r\n  })\r\n\r\n  function formatBg() {\r\n    const thresold = units === 'metric'? 20 : 60\r\n    if (!weather || weather.temp <= thresold) {\r\n      return 'from-cyan-700 to-blue-700'\r\n    }else{\r\n      return 'from-yellow-700 to-orange-700'\r\n    }\r\n  }\r\n\r\n  function handleCloseMore() {\r\n    if (showMore) {\r\n      setShowMore(false)\r\n    } else if (showDropDown) {\r\n      setShowDropDown(false)\r\n    }\r\n  }\r\n\r\n  function detectUserLocation() {\r\n    startTransition(() => {\r\n      handleCloseMore()\r\n    })\r\n    if (navigator.geolocation) {\r\n      toast.info('Fetching your weather')\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let lat = position.coords.latitude\r\n        let lon = position.coords.longitude\r\n        let coords = {lat, lon}\r\n        localStorage.setItem(\"userCoords\",JSON.stringify(coords));\r\n        localStorage.removeItem('usercity');\r\n        setUserQuery(coords)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    {showMore && <Modal showMore={showMore} \r\n      handleCloseMore={handleCloseMore} \r\n      isPending={isPending}\r\n      detectUserLocation={detectUserLocation}/>} \r\n    <AnimatePresence>\r\n      {showDropDown && \r\n      <motion.div key=\"content\"\r\n      initial=\"collapsed\"\r\n      animate=\"open\"\r\n      exit=\"collapsed\"\r\n      variants={{\r\n        open: { opacity: 1, height: 0 },\r\n        collapsed: { opacity: 0, height: \"-50%\" }\r\n      }}\r\n      transition={{type:\"spring\", stiffness:\"100\", duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}>\r\n        <DropDownContent \r\n        displayCurrentLocation={displayCurrentLocation}\r\n        handleCloseMore={handleCloseMore} />\r\n      </motion.div>}\r\n    </AnimatePresence>\r\n    <div className={`App mx-auto m-4 px-3 py-3 bg-gradient-to-br ${formatBg()} h-fit shadow-xl shadow-gray-400 md:py-5 md:px-32`}>\r\n      {displayCurrentLocation && <motion.button type='button' whileTap={{scale: 0.9}} className='text-white inline-flex' onClick={() => setShowDropDown(true)}>\r\n        <p>{`${displayCurrentLocation.name}, ${displayCurrentLocation.country}`}</p>\r\n        <UilAngleDown size={20}/>\r\n      </motion.button>}\r\n      <TopBtns setQuery={setQuery} showMore={showMore} setShowMore={setShowMore}/>\r\n      <Inputs setQuery={setQuery} units={units} setUnit={setUnit}/>\r\n      {weather && (\r\n        <>\r\n          <TimeaAndLocation weather={weather}/>\r\n          <TempDetails weather={weather}/>\r\n          <Forecast title=\"hourly forecast\" textColor=\"text-white\" items={weather.hourly}/>\r\n          <Forecast title=\"daily forecast\" textColor=\"text-white\" items={weather.daily}/>\r\n        </>\r\n      )}\r\n      <ToastContainer autoClose={5000} theme='colored' newestOnTop={true}/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\HP\\weather-app\\src\\components\\TimeaAndLocation.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\services\\WeatherServices.js",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Forecast.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Inputs.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TopBtns.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\More.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\TempDetails.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\Modal.jsx",[],[],"C:\\Users\\HP\\weather-app\\src\\components\\DropDownContent.jsx",[],[],{"ruleId":"59","severity":1,"message":"60","line":36,"column":5,"nodeType":"61","endLine":36,"endColumn":16,"suggestions":"62"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [units, userQuery]",{"range":"66","text":"67"},[1532,1543],"[units, userQuery]"]